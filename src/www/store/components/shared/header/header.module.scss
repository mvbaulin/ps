@import '../../../constants/variables.scss';

.header {
  background: $color-background-700;
  padding: $gap 0;

  &--mobile {
    display: block;

    @media (min-width: $width-tablet) {
      display: none;
    }
  }

  &--tablet {
    display: none;

    @media (min-width: $width-tablet) and (max-width: calc($width-desktop - 1px)) {
      display: block;
    }
  }

  &--desktop {
    display: none;

    @media (min-width: $width-desktop) {
      display: block;
    }
  }
}

.header {
  &--mobile {
    .inner {
      display: grid;
      grid-template-columns: 1fr 2fr 1;
      grid-template-areas: 'logo search menu';
      align-items: center;
      gap: $gap;
      transition: grid-template-columns 1s;

      >*:nth-child(1) {
        grid-area: logo;
        transition: opacity 0.3s, transform 0.3s;
      }

      >*:nth-child(2) {
        grid-area: search;
        justify-self: center;
      }

      >*:nth-child(3) {
        grid-area: menu;
        justify-self: end;
        transition: opacity 0.3s, transform 0.3s;
      }
    }

  }

  &--focused {
    .inner {
      grid-template-columns: 0 1fr 0;

      >*:nth-child(1) {
        opacity: 0;
        // transform: translateX(-100vw);
      }

      >*:nth-child(3) {
        opacity: 0;
        // transform: translateX(100vw);
      }
    }
  }

  &--tablet {
    .inner {
      display: grid;
      grid-template-columns: 1fr 2fr 1;
      grid-template-areas: 'logo search menu';
      align-items: center;
      gap: $gap;
      transition: grid-template-columns 1s;

      >*:nth-child(1) {
        grid-area: logo;
        transition: opacity 1s, transform 0.3s;
      }

      >*:nth-child(2) {
        grid-area: search;
        justify-self: center;
      }

      >*:nth-child(3) {
        grid-area: menu;
        justify-self: end;
        transition: opacity 1s, transform 0.3s;
      }
    }
  }

  &--desktop {
    .inner {
      display: grid;
      grid-template-columns: 1fr 2fr 1fr;
      grid-template-areas: 'left center right';
      align-items: center;
      gap: $gap;
    }

    .left {
      grid-area: left;
    }

    .center {
      grid-area: center;

      display: flex;
      align-items: center;
      gap: calc($gap * 3);
    }

    .right {
      grid-area: right;
      justify-self: end;

      display: flex;
      align-items: center;
      gap: calc($gap * 3);
    }
  }
}
